{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/chris/projects/fullstackopen/part1/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\n_c = Button;\n\nconst Feedback = ({\n  good,\n  neutral,\n  bad\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => props.setGood(props.good + 1),\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => props.setNeutral(props.neutral + 1),\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => props.setBad(props.bad + 1),\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Feedback;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Feedback, {\n      good: (good, setGood),\n      neutral: (neutral, setNeutral),\n      bad: (bad, setBad)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), \"/*      \", /*#__PURE__*/_jsxDEV(Feedback, {\n      good: good,\n      setGood: setGood,\n      neutral: neutral,\n      setNeutral: setNeutral,\n      bad: bad,\n      setBad: setBad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), \"*/\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Feedback\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/chris/projects/fullstackopen/part1/src/index.js"],"names":["React","useState","ReactDOM","Button","props","handleClick","text","Feedback","good","neutral","bad","setGood","setNeutral","setBad","App","render","document","getElementById"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,iBAClB;AAAQ,EAAA,OAAO,EAAEA,KAAK,CAACC,WAAvB;AAAA,YAAqCD,KAAK,CAACE;AAA3C;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMH,M;;AAGN,MAAMI,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAA2B;AAC1C,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMN,KAAK,CAACO,OAAN,CAAcP,KAAK,CAACI,IAAN,GAAa,CAA3B,CAA3B;AAA0D,MAAA,IAAI,EAAE;AAAhE;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMJ,KAAK,CAACQ,UAAN,CAAiBR,KAAK,CAACK,OAAN,GAAgB,CAAjC,CAA3B;AAAgE,MAAA,IAAI,EAAE;AAAtE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAML,KAAK,CAACS,MAAN,CAAaT,KAAK,CAACM,GAAN,GAAY,CAAzB,CAA3B;AAAwD,MAAA,IAAI,EAAE;AAA9D;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;MAAMH,Q;;AAYN,MAAMO,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACN,IAAD,EAAOG,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUG,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACS,GAAD,EAAMG,MAAN,IAAgBZ,QAAQ,CAAC,CAAD,CAA9B;AAEA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,IAAI,GAAEO,IAAI,EAAEG,OAAR,CAAd;AAA+B,MAAA,OAAO,GAAEF,OAAO,EAAEG,UAAX,CAAtC;AAA6D,MAAA,GAAG,GAAEF,GAAG,EAAEG,MAAP;AAAhE;AAAA;AAAA;AAAA;AAAA,YADF,2BAEQ,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEL,IAAhB;AACI,MAAA,OAAO,EAAEG,OADb;AAEI,MAAA,OAAO,EAAEF,OAFb;AAGI,MAAA,UAAU,EAAEG,UAHhB;AAII,MAAA,GAAG,EAAEF,GAJT;AAKI,MAAA,MAAM,EAAEG;AALZ;AAAA;AAAA;AAAA;AAAA,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAnBD;;GAAMC,G;;MAAAA,G;AAqBNZ,QAAQ,CAACa,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = props =>\n  <button onClick={props.handleClick}>{props.text}</button>\n\nconst Feedback = ({ good, neutral, bad}) => {\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <br />\n      <Button handleClick={() => props.setGood(props.good + 1)} text={\"Good\"}/>\n      <Button handleClick={() => props.setNeutral(props.neutral + 1)} text={\"Neutral\"}/>\n      <Button handleClick={() => props.setBad(props.bad + 1)} text={\"Bad\"}/>\n    </div>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <Feedback good={good, setGood} neutral={neutral, setNeutral} bad={bad, setBad} />\n    /*      <Feedback good={good}\n                setGood={setGood}\n                neutral={neutral}\n                setNeutral={setNeutral}\n                bad={bad}\n                setBad={setBad}\n      />\n      */\n    </div>\n  )\n}\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}