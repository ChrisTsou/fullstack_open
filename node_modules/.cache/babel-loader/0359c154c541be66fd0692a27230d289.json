{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/chris/projects/fullstackopen/part1/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\n_c = Button;\n\nconst Feedback = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => props.setGood(props.good + 1),\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => props.setNeutral(props.neutral + 1),\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => props.setBad(props.bad + 1),\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Feedback;\n\nconst RenderStat = props => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [props.text, \" \", props.num]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 3\n}, this);\n\n_c3 = RenderStat;\n\nconst Statistics = props => {\n  const total = props.good + props.neutral + props.bad;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RenderStat, {\n      text: \"good\",\n      num: props.good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RenderStat, {\n      text: \"neutral\",\n      num: props.neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RenderStat, {\n      text: \"bad\",\n      num: props.bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RenderStat, {\n      text: \"all\",\n      num: total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RenderStat, {\n      text: \"average\",\n      num: (props.good - props.bad) / total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Feedback, {\n      good: good,\n      setGood: setGood,\n      neutral: neutral,\n      setNeutral: setNeutral,\n      bad: bad,\n      setBad: setBad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c5 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Feedback\");\n$RefreshReg$(_c3, \"RenderStat\");\n$RefreshReg$(_c4, \"Statistics\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/home/chris/projects/fullstackopen/part1/src/index.js"],"names":["React","useState","ReactDOM","Button","props","handleClick","text","Feedback","setGood","good","setNeutral","neutral","setBad","bad","RenderStat","num","Statistics","total","App","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>{props.text}</button>\n);\n\nconst Feedback = (props) => {\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <br />\n      <Button handleClick={() => props.setGood(props.good + 1)} text={\"Good\"} />\n      <Button\n        handleClick={() => props.setNeutral(props.neutral + 1)}\n        text={\"Neutral\"}\n      />\n      <Button handleClick={() => props.setBad(props.bad + 1)} text={\"Bad\"} />\n    </div>\n  );\n};\n\nconst RenderStat = (props) => (\n  <p>\n    {props.text} {props.num}\n  </p>\n);\n\nconst Statistics = (props) => {\n  const total = props.good + props.neutral + props.bad;\n  return (\n    <div>\n      <h1>Statistics</h1>\n      <RenderStat text=\"good\" num={props.good} />\n      <RenderStat text=\"neutral\" num={props.neutral} />\n      <RenderStat text=\"bad\" num={props.bad} />\n      <RenderStat text=\"all\" num={total} />\n      <RenderStat text=\"average\" num={(props.good - props.bad) / total} />\n    </div>\n  );\n};\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  return (\n    <div>\n      <Feedback\n        good={good}\n        setGood={setGood}\n        neutral={neutral}\n        setNeutral={setNeutral}\n        bad={bad}\n        setBad={setBad}\n      />\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}