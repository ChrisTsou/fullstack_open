{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/chris/projects/fullstackopen/part1/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\n_c = Button;\n\nconst Feedback = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => props.setGood(props.good + 1),\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => props.setNeutral(props.neutral + 1),\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => props.setBad(props.bad + 1),\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Feedback;\n\nconst RenderStat = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.num\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 3\n}, this);\n\n_c3 = RenderStat;\n\nconst Statistics = props => {\n  const total = props.good + props.neutral + props.bad;\n\n  if (total == 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(RenderStat, {\n          text: \"good\",\n          num: props.good\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RenderStat, {\n          text: \"neutral\",\n          num: props.neutral\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RenderStat, {\n          text: \"bad\",\n          num: props.bad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RenderStat, {\n          text: \"all\",\n          num: total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RenderStat, {\n          text: \"average\",\n          num: (props.good - props.bad) / total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RenderStat, {\n          text: \"positive\",\n          num: props.good / total * 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Statistics;\nconst anecdotes = [\"If it hurts, do it more often\", \"Adding manpower to a late software project makes it later!\", \"The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.\", \"Any fool can write code that a computer can understand. Good programmers write code that humans can understand.\", \"Premature optimization is the root of all evil.\", \"Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.\"];\n\nconst Anecdote = props => {\n  const indexOfTop = anecdotes[props.state.votes.indexOf(Math.max(...props.state.votes))]; //too many comparisons here can make own function instead\n\n  console.log(indexOfTop);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Anecdote of the day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: anecdotes[props.state.selection]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"has \", props.state.votes[props.state.selection], \" votes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => {\n        const values = [...props.state.votes];\n        values[props.state.selection] += 1;\n        props.setState({ ...props.state,\n          votes: values\n        });\n      },\n      text: \"vote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => props.setState({ ...props.state,\n        selection: Math.floor(Math.random() * anecdotes.length)\n      }),\n      text: \"Next anecdote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Top anecdote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = Anecdote;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [anecdotesState, setAnecdotesState] = useState({\n    selection: 0,\n    votes: Array.apply(null, new Array(anecdotes.length)).map(Number.prototype.valueOf, 0)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Feedback, {\n      good: good,\n      setGood: setGood,\n      neutral: neutral,\n      setNeutral: setNeutral,\n      bad: bad,\n      setBad: setBad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Anecdote, {\n      state: anecdotesState,\n      setState: setAnecdotesState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"+HnXn0Gw+0JyYQj7IMFezfQVtno=\");\n\n_c6 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 131,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Feedback\");\n$RefreshReg$(_c3, \"RenderStat\");\n$RefreshReg$(_c4, \"Statistics\");\n$RefreshReg$(_c5, \"Anecdote\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"sources":["/home/chris/projects/fullstackopen/part1/src/index.js"],"names":["React","useState","ReactDOM","Button","props","handleClick","text","Feedback","setGood","good","setNeutral","neutral","setBad","bad","RenderStat","num","Statistics","total","anecdotes","Anecdote","indexOfTop","state","votes","indexOf","Math","max","console","log","selection","values","setState","floor","random","length","App","anecdotesState","setAnecdotesState","Array","apply","map","Number","prototype","valueOf","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>{props.text}</button>\n);\n\nconst Feedback = (props) => {\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <br />\n      <Button handleClick={() => props.setGood(props.good + 1)} text={\"Good\"} />\n      <Button\n        handleClick={() => props.setNeutral(props.neutral + 1)}\n        text={\"Neutral\"}\n      />\n      <Button handleClick={() => props.setBad(props.bad + 1)} text={\"Bad\"} />\n    </div>\n  );\n};\n\nconst RenderStat = (props) => (\n  <tr>\n    <td>{props.text}</td>\n    <td>{props.num}</td>\n  </tr>\n);\n\nconst Statistics = (props) => {\n  const total = props.good + props.neutral + props.bad;\n\n  if (total == 0) {\n    return (\n      <div>\n        <h1>Statistics</h1>\n        <p>No feedback given</p>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h1>Statistics</h1>\n      <table>\n        <tbody>\n          <RenderStat text=\"good\" num={props.good} />\n          <RenderStat text=\"neutral\" num={props.neutral} />\n          <RenderStat text=\"bad\" num={props.bad} />\n          <RenderStat text=\"all\" num={total} />\n          <RenderStat text=\"average\" num={(props.good - props.bad) / total} />\n          <RenderStat text=\"positive\" num={(props.good / total) * 100} />\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst anecdotes = [\n  \"If it hurts, do it more often\",\n  \"Adding manpower to a late software project makes it later!\",\n  \"The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.\",\n  \"Any fool can write code that a computer can understand. Good programmers write code that humans can understand.\",\n  \"Premature optimization is the root of all evil.\",\n  \"Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.\",\n];\n\nconst Anecdote = (props) => {\n  const indexOfTop =\n    anecdotes[props.state.votes.indexOf(Math.max(...props.state.votes))]; //too many comparisons here can make own function instead\n  console.log(indexOfTop);\n\n  return (\n    <div>\n      <h1>Anecdote of the day</h1>\n      <p>{anecdotes[props.state.selection]}</p>\n      <p>has {props.state.votes[props.state.selection]} votes</p>\n      <Button\n        handleClick={() => {\n          const values = [...props.state.votes];\n          values[props.state.selection] += 1;\n\n          props.setState({ ...props.state, votes: values });\n        }}\n        text={\"vote\"}\n      />\n      <Button\n        handleClick={() =>\n          props.setState({\n            ...props.state,\n            selection: Math.floor(Math.random() * anecdotes.length),\n          })\n        }\n        text={\"Next anecdote\"}\n      />\n      <h1>Top anecdote</h1>\n      <p>{}</p>\n    </div>\n  );\n};\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [anecdotesState, setAnecdotesState] = useState({\n    selection: 0,\n    votes: Array.apply(null, new Array(anecdotes.length)).map(\n      Number.prototype.valueOf,\n      0\n    ),\n  });\n\n  return (\n    <div>\n      <Feedback\n        good={good}\n        setGood={setGood}\n        neutral={neutral}\n        setNeutral={setNeutral}\n        bad={bad}\n        setBad={setBad}\n      />\n      <Statistics good={good} neutral={neutral} bad={bad} />\n      <Anecdote state={anecdotesState} setState={setAnecdotesState} />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}